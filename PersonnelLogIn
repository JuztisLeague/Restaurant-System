package BonAppetit;
import java.awt.Frame;



import javax.swing.JButton;
import javax.swing.GroupLayout.Alignment;
import javax.swing.GroupLayout;
import java.awt.event.ActionListener;
import javax.swing.LayoutStyle.ComponentPlacement;
import java.awt.Font;
import javax.swing.JLabel;
import javax.swing.ImageIcon;
import java.awt.Color;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import java.awt.event.ActionEvent;
import javax.swing.JPasswordField;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
//import javax.swing.JTextField;




public class PersonnelLogin extends javax.swing.JFrame {

	private static final long serialVersionUID = 1L;
	
	SignInPage signInPage = new SignInPage();
    public PersonnelLogin(){
    	
    	
    	setExtendedState(Frame.MAXIMIZED_BOTH);
    	setUndecorated(true);
    	connect();
        initComponents();
    }
    
    Connection con;
	PreparedStatement pst;
	ResultSet rs;
	//private JTextField textDishID;
	
	public void connect() {
		try {
			Class.forName("com.mysql.cj.jdbc.Driver");
			con = DriverManager.getConnection("jdbc:mysql://localhost:3306/bon_appetit", "root", "");
		}
		
		catch (ClassNotFoundException ex) {
	        ex.printStackTrace();
	        JOptionPane.showMessageDialog(null, "Failed to connect to database. ClassNotFoundException: " + ex.getMessage());
	    } catch (SQLException ex) {
	        ex.printStackTrace();
	        JOptionPane.showMessageDialog(null, "Failed to connect to database. SQLException: " + ex.getMessage());
	    }
	}

   
    private void initComponents() {

        jPanel5 = new javax.swing.JPanel();
        jPanel5.setOpaque(false);
        jPanel5.setBounds(742, 185, 435, 100);
        jPanel5.setFocusable(false);
        jLabel2 = new javax.swing.JLabel();
        jLabel2.setForeground(Color.WHITE);
        jLabel2.setFocusable(false);
        jPanel4 = new javax.swing.JPanel();
        jPanel4.setOpaque(false);
        jPanel4.setBounds(742, 291, 435, 62);
        jPanel4.setFocusable(false);
        //jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel1.setForeground(Color.WHITE);
        jLabel1.setFocusable(false);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1920, 1080));

        jPanel5.setPreferredSize(new java.awt.Dimension(435, 100));

        jLabel2.setFont(new Font("Century Gothic", Font.BOLD | Font.ITALIC, 33));
        jLabel2.setText("Welcome To Bon Appettit");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5Layout.setHorizontalGroup(
        	jPanel5Layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
        			.addContainerGap()
        			.addComponent(jLabel2, GroupLayout.DEFAULT_SIZE, 415, Short.MAX_VALUE)
        			.addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
        	jPanel5Layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(jPanel5Layout.createSequentialGroup()
        			.addGap(33)
        			.addComponent(jLabel2)
        			.addContainerGap(25, Short.MAX_VALUE))
        );
        jPanel5.setLayout(jPanel5Layout);

        jLabel1.setFont(new Font("Century Gothic", Font.BOLD | Font.ITALIC, 14));
        jLabel1.setText("Bonjour , to  which royalty is keen to have my service?");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(31, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        
        btnBack = new JButton("Back");
        btnBack.setFont(new Font("Century Gothic", Font.PLAIN, 20));
        btnBack.setBounds(34, 25, 99, 62);
        btnBack.setFocusable(false);
        btnBack.addActionListener(new ActionListener() {
        	public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().setLayout(null);
        
        btnClose = new JButton("Close");
        btnClose.setFocusable(false);
        btnClose.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		System.exit(0);
        	}
        });
        btnClose.setFont(new Font("Tahoma", Font.PLAIN, 18));
        btnClose.setBounds(1776, 11, 112, 46);
        getContentPane().add(btnClose);
        getContentPane().add(jPanel5);
        getContentPane().add(jPanel4);
        getContentPane().add(btnBack);
        
        JPanel panel = new JPanel();
        panel.setOpaque(false);
        panel.setBounds(742, 384, 435, 228);
        getContentPane().add(panel);
        panel.setLayout(null);
        
        lblRole = new JLabel("Role");
        lblRole.setForeground(new Color(255, 255, 255));
        lblRole.setBounds(190, 11, 46, 14);
        panel.add(lblRole);
        
        lblPassword = new JLabel("Password");
        lblPassword.setForeground(Color.WHITE);
        lblPassword.setBounds(173, 76, 68, 14);
        panel.add(lblPassword);
        
        textRole = new JTextField();
        textRole.setBounds(106, 36, 183, 29);
        panel.add(textRole);
        textRole.setColumns(10);
        
        JButton btnNewButton_1 = new JButton("Login");
        btnNewButton_1.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		
        		jLoginButtonActionPerformed(e);
        	}
        });
        btnNewButton_1.setBounds(106, 169, 89, 23);
        panel.add(btnNewButton_1);
        
        btnNewButton = new JButton("Clear");
        btnNewButton.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		
        		jClearButtonActionPerformed(e);
        		
        	}
        });
        btnNewButton.setBounds(205, 169, 89, 23);
        panel.add(btnNewButton);
        
        passwordField = new JPasswordField();
        passwordField.addKeyListener(new KeyAdapter() {
        	@Override
        	public void keyPressed(KeyEvent e) {
        		
        		jLoginButtionKeyPressed(e);
        	}
        });
        passwordField.setBounds(106, 101, 183, 29);
        panel.add(passwordField);
        
        lblBackground = new JLabel("");
        lblBackground.setIcon(new ImageIcon(PersonnelLogin.class.getResource("/images/mainBG.png")));
        lblBackground.setBounds(0, 0, 1920, 1080);
        getContentPane().add(lblBackground);

        pack();
    }
    
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        
        SignInPage signInPage = new SignInPage();
        signInPage.setVisible(true);
        this.dispose();
       
   }     

    public static void main(String args[]) {
    	
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PersonnelLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PersonnelLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PersonnelLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PersonnelLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PersonnelLogin().setVisible(true);
            }
        });
    }
    
    private void jLoginButtionKeyPressed(KeyEvent e) {
    	
    	if(e.getKeyCode() == KeyEvent.VK_ENTER) {
    		String role =  textRole.getText();
            String password = passwordField.getText();
            
           try {
        	   pst = con.prepareStatement("SELECT * FROM password WHERE role = ?");
               pst.setString(1, role);
               ResultSet rs = pst.executeQuery();
               

               	if (rs.next()) {
            	   String storedRole = rs.getString("role");
            	   String storedPassword = rs.getString("password");
            
            	if (password.equals(storedPassword)) {
                // Passwords match, login successful
            		JOptionPane.showMessageDialog(this, "Login successful!");
                // Open respective page based on role
                switch (storedRole) {
                    case "Chef":
                        OptionsChef optionsChef = new OptionsChef();
                        optionsChef.setVisible(true);
                        break;
                    case "Admin":
                        OptionsAdmin optionsAdmin = new OptionsAdmin();
                        optionsAdmin.setVisible(true);
                        break;
                    case "Cashier":
                    	OptionsCashier optionsCashier = new OptionsCashier();
                        optionsCashier.setVisible(true);
                        break;
                    default:
                        JOptionPane.showMessageDialog(this, "Invalid user role.", "Error", JOptionPane.ERROR_MESSAGE);
                	}
                	this.dispose(); // Close current login page
                	
                	rs.close();
                   	pst.close();
                   	con.close();
            	} else {
            		// Passwords don't match, login failed
            		JOptionPane.showMessageDialog(this, "Incorrect password. Please try again.", "Error", JOptionPane.ERROR_MESSAGE);
            	}
               	} else {
               		// Username not found, login failed
               		JOptionPane.showMessageDialog(this, "Username not found. Please try again.", "Error", JOptionPane.ERROR_MESSAGE);
               	}

               	
        } catch (SQLException el) {
        	JOptionPane.showMessageDialog(this, "Error connecting to database: " + el.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        	el.printStackTrace();
        	}
    	   }
    	
    }
    
    
    private void jLoginButtonActionPerformed(ActionEvent e) {                                         
        String role =  textRole.getText();
        String password = passwordField.getText();
        
       try {
    	   pst = con.prepareStatement("SELECT * FROM password WHERE role = ?");
           pst.setString(1, role);
           ResultSet rs = pst.executeQuery();
           

           	if (rs.next()) {
        	   String storedRole = rs.getString("role");
        	   String storedPassword = rs.getString("password");
        
        	if (password.equals(storedPassword)) {
            // Passwords match, login successful
        		JOptionPane.showMessageDialog(this, "Login successful!");
            // Open respective page based on role
            switch (storedRole) {
                case "Chef":
                    OptionsChef optionsChef = new OptionsChef();
                    optionsChef.setVisible(true);
                    break;
                case "Admin":
                    OptionsAdmin optionsAdmin = new OptionsAdmin();
                    optionsAdmin.setVisible(true);
                    break;
                case "Cashier":
                	OptionsCashier optionsCashier = new OptionsCashier();
                    optionsCashier.setVisible(true);
                    break;
                default:
                    JOptionPane.showMessageDialog(this, "Invalid user role.", "Error", JOptionPane.ERROR_MESSAGE);
            	}
            	this.dispose(); // Close current login page
            	
            	rs.close();
               	pst.close();
               	con.close();
        	} else {
        		// Passwords don't match, login failed
        		JOptionPane.showMessageDialog(this, "Incorrect password. Please try again.", "Error", JOptionPane.ERROR_MESSAGE);
        	}
           	} else {
           		// Username not found, login failed
           		JOptionPane.showMessageDialog(this, "Username not found. Please try again.", "Error", JOptionPane.ERROR_MESSAGE);
           	}

           	
       } catch (SQLException el) {
    	JOptionPane.showMessageDialog(this, "Error connecting to database: " + el.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    	el.printStackTrace();
    	}
    }               
    
    public void jClearButtonActionPerformed(ActionEvent e) {
    	
    	textRole.setText("");
    	passwordField.setText("");
    	textRole.requestFocus();
    	
    }
    
    
    private JLabel jLabel1;
    private JLabel jLabel2;
    private JPanel jPanel4;
    private JPanel jPanel5;
    private JButton btnBack;
    private JLabel lblRole;
    private JLabel lblBackground;
    private JLabel lblPassword;
    private JTextField textRole;
    private JButton btnClose;
    private JButton btnNewButton;
    private JPasswordField passwordField;
}
